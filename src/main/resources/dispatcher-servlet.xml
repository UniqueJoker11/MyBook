<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"
	default-autowire="byName" default-lazy-init="true">
    <!--注解驱动-->
	<mvc:annotation-driven validator="validator"/>
    <!--servet handler处理-->
    <mvc:default-servlet-handler/>
    <context:component-scan base-package="colin.profile.opensource.system.controller"></context:component-scan>
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!--配置静态资源 -->
	<mvc:resources mapping="/js/**" location="/resources/js/"></mvc:resources>
	<mvc:resources mapping="/css/**" location="/resources/css/"></mvc:resources>
	<mvc:resources mapping="/images/**" location="/resources/images/"></mvc:resources>
	<mvc:resources mapping="/fonts/**" location="/resources/fonts/"></mvc:resources>
	<!-- 以下 validator ConversionService 在使用 mvc:annotation-driven 会 自动注册 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找 -->
				<value>classpath:message/error_message</value>
				<value>classpath*:org/hibernate/validator/ValidationMessages</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage" value="false" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="60" />
	</bean>
	<!--据请求URL路径直接转化为逻辑视图名的支持基类 -->
<!-- 	<bean name="/pay/*.html"
		class="org.springframework.web.servlet.mvc.UrlFilenameViewController"
		p:prefix="template/" p:suffix=".html"></bean> -->
	<!--Beetl视图解析器 -->
	<bean id="beetlConfig" class="org.beetl.ext.spring.BeetlGroupUtilConfiguration"
		init-method="init" />
	<bean id="viewResolver" class="org.beetl.ext.spring.BeetlSpringViewResolver"
		p:prefix="/templates" p:suffix=".html">
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="order" value="1"></property>
	</bean>
	<!-- <mvc:interceptors> <mvc:interceptor> <mvc:mapping path="/homework/*.html" 
		/> <bean class="colin.web.homework.interceptor.UserAuthorityInteceptor"></bean> 
		</mvc:interceptor> </mvc:interceptors> -->
	<!--配置统一的错误处理机制,也可以自己重写这个类，通过集成HandlerExceptionResolverAdapter -->
	<!-- <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
		<property name="exceptionMappings"> <props> <prop key="java.lang.Exception">/server_error</prop> 
		<prop key="java.lang.Throwable">server_theread_error</prop> </props> </property> 
		</bean> -->
	<!--处理JSON请求 -->
	<bean id="jsonConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonConverter" />
			</list>
		</property>
	</bean>
	<!--处理文件上传是所需要的文件 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>
</beans>